{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665597859592_1281487211","id":"20221012-180419_979350469","dateCreated":"2022-10-12T18:04:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:27","text":"%pyspark\n\nfrom pyspark.sql import SparkSession\nspark = SparkSession \\\n    .builder \\\n    .appName(\"MyApp\") \\\n    .getOrCreate()","dateUpdated":"2022-10-12T18:04:38+0000","dateFinished":"2022-10-12T18:04:59+0000","dateStarted":"2022-10-12T18:04:38+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.classification import LogisticRegression\nfrom pyspark.ml.feature import HashingTF, Tokenizer\nfrom pyspark.sql.functions import UserDefinedFunction\nfrom pyspark.mllib.linalg import Vectors\nfrom pyspark.ml.param import Param, Params\nfrom pyspark.sql.types import *","user":"anonymous","dateUpdated":"2022-10-12T19:11:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665597990455_-1352709951","id":"20221012-180630_1763788938","dateCreated":"2022-10-12T18:06:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:397","dateFinished":"2022-10-12T19:11:03+0000","dateStarted":"2022-10-12T19:11:03+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nsc = spark.sparkContext\nurl = 'https://s3.amazonaws.com/apache-zeppelin/tutorial/bank/bank.csv'\nfrom pyspark import SparkFiles\nsc.addFile(url)","user":"anonymous","dateUpdated":"2022-10-12T18:05:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665597878701_-1532581672","id":"20221012-180438_1793330494","dateCreated":"2022-10-12T18:04:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:99","dateFinished":"2022-10-12T18:05:52+0000","dateStarted":"2022-10-12T18:05:40+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\ndf = spark.read.csv(\"file://\"+SparkFiles.get(\"bank.csv\"), sep=';', header=True, inferSchema=True)\ndf.registerTempTable('bank')\ndf.show(50)","user":"anonymous","dateUpdated":"2022-10-12T20:09:20+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665597939982_2029890533","id":"20221012-180539_1279358100","dateCreated":"2022-10-12T18:05:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:212","dateFinished":"2022-10-12T20:09:20+0000","dateStarted":"2022-10-12T20:09:20+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+-------------+--------+---------+-------+-------+-------+----+---------+---+-----+--------+--------+-----+--------+--------+---+\n|age|          job| marital|education|default|balance|housing|loan|  contact|day|month|duration|campaign|pdays|previous|poutcome|  y|\n+---+-------------+--------+---------+-------+-------+-------+----+---------+---+-----+--------+--------+-----+--------+--------+---+\n| 30|   unemployed| married|  primary|     no|   1787|     no|  no| cellular| 19|  oct|      79|       1|   -1|       0| unknown| no|\n| 33|     services| married|secondary|     no|   4789|    yes| yes| cellular| 11|  may|     220|       1|  339|       4| failure| no|\n| 35|   management|  single| tertiary|     no|   1350|    yes|  no| cellular| 16|  apr|     185|       1|  330|       1| failure| no|\n| 30|   management| married| tertiary|     no|   1476|    yes| yes|  unknown|  3|  jun|     199|       4|   -1|       0| unknown| no|\n| 59|  blue-collar| married|secondary|     no|      0|    yes|  no|  unknown|  5|  may|     226|       1|   -1|       0| unknown| no|\n| 35|   management|  single| tertiary|     no|    747|     no|  no| cellular| 23|  feb|     141|       2|  176|       3| failure| no|\n| 36|self-employed| married| tertiary|     no|    307|    yes|  no| cellular| 14|  may|     341|       1|  330|       2|   other| no|\n| 39|   technician| married|secondary|     no|    147|    yes|  no| cellular|  6|  may|     151|       2|   -1|       0| unknown| no|\n| 41| entrepreneur| married| tertiary|     no|    221|    yes|  no|  unknown| 14|  may|      57|       2|   -1|       0| unknown| no|\n| 43|     services| married|  primary|     no|    -88|    yes| yes| cellular| 17|  apr|     313|       1|  147|       2| failure| no|\n| 39|     services| married|secondary|     no|   9374|    yes|  no|  unknown| 20|  may|     273|       1|   -1|       0| unknown| no|\n| 43|       admin.| married|secondary|     no|    264|    yes|  no| cellular| 17|  apr|     113|       2|   -1|       0| unknown| no|\n| 36|   technician| married| tertiary|     no|   1109|     no|  no| cellular| 13|  aug|     328|       2|   -1|       0| unknown| no|\n| 20|      student|  single|secondary|     no|    502|     no|  no| cellular| 30|  apr|     261|       1|   -1|       0| unknown|yes|\n| 31|  blue-collar| married|secondary|     no|    360|    yes| yes| cellular| 29|  jan|      89|       1|  241|       1| failure| no|\n| 40|   management| married| tertiary|     no|    194|     no| yes| cellular| 29|  aug|     189|       2|   -1|       0| unknown| no|\n| 56|   technician| married|secondary|     no|   4073|     no|  no| cellular| 27|  aug|     239|       5|   -1|       0| unknown| no|\n| 37|       admin.|  single| tertiary|     no|   2317|    yes|  no| cellular| 20|  apr|     114|       1|  152|       2| failure| no|\n| 25|  blue-collar|  single|  primary|     no|   -221|    yes|  no|  unknown| 23|  may|     250|       1|   -1|       0| unknown| no|\n| 31|     services| married|secondary|     no|    132|     no|  no| cellular|  7|  jul|     148|       1|  152|       1|   other| no|\n| 38|   management|divorced|  unknown|     no|      0|    yes|  no| cellular| 18|  nov|      96|       2|   -1|       0| unknown| no|\n| 42|   management|divorced| tertiary|     no|     16|     no|  no| cellular| 19|  nov|     140|       3|   -1|       0| unknown| no|\n| 44|     services|  single|secondary|     no|    106|     no|  no|  unknown| 12|  jun|     109|       2|   -1|       0| unknown| no|\n| 44| entrepreneur| married|secondary|     no|     93|     no|  no| cellular|  7|  jul|     125|       2|   -1|       0| unknown| no|\n| 26|    housemaid| married| tertiary|     no|    543|     no|  no| cellular| 30|  jan|     169|       3|   -1|       0| unknown| no|\n| 41|   management| married| tertiary|     no|   5883|     no|  no| cellular| 20|  nov|     182|       2|   -1|       0| unknown| no|\n| 55|  blue-collar| married|  primary|     no|    627|    yes|  no|  unknown|  5|  may|     247|       1|   -1|       0| unknown| no|\n| 67|      retired| married|  unknown|     no|    696|     no|  no|telephone| 17|  aug|     119|       1|  105|       2| failure| no|\n| 56|self-employed| married|secondary|     no|    784|     no| yes| cellular| 30|  jul|     149|       2|   -1|       0| unknown| no|\n| 53|       admin.| married|secondary|     no|    105|     no| yes| cellular| 21|  aug|      74|       2|   -1|       0| unknown| no|\n| 68|      retired|divorced|secondary|     no|   4189|     no|  no|telephone| 14|  jul|     897|       2|   -1|       0| unknown|yes|\n| 31|   technician| married|secondary|     no|    171|     no|  no| cellular| 27|  aug|      81|       3|   -1|       0| unknown| no|\n| 59|   management| married|secondary|     no|     42|     no|  no| cellular| 21|  nov|      40|       1|   -1|       0| unknown| no|\n| 32|   management|  single| tertiary|     no|   2536|    yes|  no| cellular| 26|  aug|     958|       6|   -1|       0| unknown|yes|\n| 49|   technician| married| tertiary|     no|   1235|     no|  no| cellular| 13|  aug|     354|       3|   -1|       0| unknown|yes|\n| 42|       admin.|divorced|secondary|     no|   1811|    yes|  no|  unknown| 14|  may|     150|       1|   -1|       0| unknown| no|\n| 78|      retired|divorced|  primary|     no|    229|     no|  no|telephone| 22|  oct|      97|       1|   -1|       0| unknown|yes|\n| 32|  blue-collar| married|secondary|     no|   2089|    yes|  no| cellular| 14|  nov|     132|       1|   -1|       0| unknown|yes|\n| 33|   management| married|secondary|     no|   3935|    yes|  no| cellular|  6|  may|     765|       1|  342|       2| failure|yes|\n| 23|     services|  single| tertiary|     no|    363|    yes|  no|  unknown| 30|  may|      16|      18|   -1|       0| unknown| no|\n| 38|   management|  single| tertiary|     no|  11971|    yes|  no|  unknown| 17|  nov|     609|       2|  101|       3| failure| no|\n| 36|   management|  single| tertiary|     no|    553|     no|  no| cellular| 11|  aug|     106|       2|   -1|       0| unknown| no|\n| 52|  blue-collar| married|secondary|     no|   1117|    yes|  no| cellular| 13|  may|     365|       1|   -1|       0| unknown| no|\n| 32|   technician| married| tertiary|     no|    396|    yes|  no| cellular| 13|  may|     205|       3|   -1|       0| unknown| no|\n| 32|   technician|  single| tertiary|     no|   2204|    yes|  no| cellular| 21|  nov|      11|       4|   -1|       0| unknown| no|\n| 34|   management|  single| tertiary|     no|    872|    yes|  no|  unknown|  7|  may|     105|       2|   -1|       0| unknown| no|\n| 55|  blue-collar| married|  primary|     no|    145|     no|  no|telephone|  2|  feb|      59|       3|    5|       2|   other| no|\n| 26|  blue-collar| married|  primary|     no|      0|    yes|  no|  unknown| 21|  may|     425|       1|   -1|       0| unknown| no|\n| 32| entrepreneur|  single|  primary|    yes|   -849|    yes| yes| cellular|  4|  feb|     204|       1|   -1|       0| unknown| no|\n| 61|       admin.| married|  unknown|     no|   4629|    yes|  no| cellular| 27|  jan|     181|       1|   92|       1| success|yes|\n+---+-------------+--------+---------+-------+-------+-------+----+---------+---+-----+--------+--------+-----+--------+--------+---+\nonly showing top 50 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=61","http://172.17.0.2:4040/jobs/job?id=62","http://172.17.0.2:4040/jobs/job?id=63"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n(trainingData, testData) = df.randomSplit([0.7, 0.3])","user":"anonymous","dateUpdated":"2022-10-12T20:01:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665598804671_162804947","id":"20221012-182004_1882619261","dateCreated":"2022-10-12T18:20:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:720","dateFinished":"2022-10-12T20:01:33+0000","dateStarted":"2022-10-12T20:01:33+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\ndef labelForResults(s):\n    if s == 'yes':\n        return 1.0\n    else:\n        return 0.0\nlabel = UserDefinedFunction(labelForResults, DoubleType())\nlabeledData = trainingData.select(label(trainingData.y).alias('label'), trainingData.job)","user":"anonymous","dateUpdated":"2022-10-12T20:10:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665601970233_-924234550","id":"20221012-191250_1993368790","dateCreated":"2022-10-12T19:12:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1636","dateFinished":"2022-10-12T20:10:07+0000","dateStarted":"2022-10-12T20:10:07+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nlabeledData.show(3)","user":"anonymous","dateUpdated":"2022-10-12T20:10:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665602386689_1317286458","id":"20221012-191946_1017130779","dateCreated":"2022-10-12T19:19:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1720","dateFinished":"2022-10-12T20:10:09+0000","dateStarted":"2022-10-12T20:10:09+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----+-------+\n|label|    job|\n+-----+-------+\n|  1.0|student|\n|  1.0|student|\n|  0.0|student|\n+-----+-------+\nonly showing top 3 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=64"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\ntokenizer = Tokenizer(inputCol=\"job\", outputCol=\"words\")\nhashingTF = HashingTF(inputCol=tokenizer.getOutputCol(), outputCol=\"features\")\nlr = LogisticRegression(maxIter=10, regParam=0.01)\npipeline = Pipeline(stages=[tokenizer, hashingTF, lr])\nmodel = pipeline.fit(labeledData)","user":"anonymous","dateUpdated":"2022-10-12T20:10:26+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665603685366_1284649304","id":"20221012-194125_126929008","dateCreated":"2022-10-12T19:41:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2028","dateFinished":"2022-10-12T20:10:27+0000","dateStarted":"2022-10-12T20:10:26+0000","results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=65","http://172.17.0.2:4040/jobs/job?id=66","http://172.17.0.2:4040/jobs/job?id=67","http://172.17.0.2:4040/jobs/job?id=68","http://172.17.0.2:4040/jobs/job?id=69","http://172.17.0.2:4040/jobs/job?id=70","http://172.17.0.2:4040/jobs/job?id=71","http://172.17.0.2:4040/jobs/job?id=72","http://172.17.0.2:4040/jobs/job?id=73","http://172.17.0.2:4040/jobs/job?id=74","http://172.17.0.2:4040/jobs/job?id=75","http://172.17.0.2:4040/jobs/job?id=76","http://172.17.0.2:4040/jobs/job?id=77","http://172.17.0.2:4040/jobs/job?id=78"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\npredictionsDf = model.transform(testData)\npredictionsDf.registerTempTable('Predictions')","user":"anonymous","dateUpdated":"2022-10-12T20:10:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665605010617_-1291142861","id":"20221012-200330_464499420","dateCreated":"2022-10-12T20:03:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2422","dateFinished":"2022-10-12T20:10:32+0000","dateStarted":"2022-10-12T20:10:32+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"\n\n%sql \nSELECT *  FROM Predictions where prediction > 0\n","user":"anonymous","dateUpdated":"2022-10-12T20:10:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"age","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"job","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"marital","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"education","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"default","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"balance","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"housing","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"loan","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"contact","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"day","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"month","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"duration","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"campaign","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"pdays","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"previous","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"poutcome","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"y","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"words","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"features","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"rawPrediction","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"probability","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"prediction","visible":true,"width":"*","sort":{"priority":0,"direction":"asc"},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"age":"string","job":"string","marital":"string","education":"string","default":"string","balance":"string","housing":"string","loan":"string","contact":"string","day":"string","month":"string","duration":"string","campaign":"string","pdays":"string","previous":"string","poutcome":"string","y":"string","words":"string","features":"string","rawPrediction":"string","probability":"string","prediction":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665605096264_-1049293778","id":"20221012-200456_184520705","dateCreated":"2022-10-12T20:04:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2503","dateFinished":"2022-10-12T20:10:37+0000","dateStarted":"2022-10-12T20:10:37+0000","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tjob\tmarital\teducation\tdefault\tbalance\thousing\tloan\tcontact\tday\tmonth\tduration\tcampaign\tpdays\tprevious\tpoutcome\ty\twords\tfeatures\trawPrediction\tprobability\tprediction\n"},{"type":"TEXT","data":""}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=79"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\ntraining = sqlContext.createDataFrame([\n    (1.0, Vectors.dense([0.0, 1.1, 0.1])),\n    (0.0, Vectors.dense([2.0, 1.0, -1.1])),\n    (0.0, Vectors.dense([2.0, 1.3, 1.0])),\n    (1.0, Vectors.dense([0.0, 1.2, -0.5]))], [\"label\", \"features\"])","user":"anonymous","dateUpdated":"2022-10-12T18:19:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665598439773_-683171501","id":"20221012-181359_1664363681","dateCreated":"2022-10-12T18:13:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:510","dateFinished":"2022-10-12T18:19:52+0000","dateStarted":"2022-10-12T18:19:50+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nfrom pyspark.sql.functions import col, when\nnew_column = when(col('y') == \"no\", 1.0).otherwise(0.0)\ndf = df.withColumn('vectors', new_column)","user":"anonymous","dateUpdated":"2022-10-12T19:07:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665598790566_-1930407245","id":"20221012-181950_51281238","dateCreated":"2022-10-12T18:19:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:639","dateFinished":"2022-10-12T19:07:16+0000","dateStarted":"2022-10-12T19:07:16+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nlr = LogisticRegression(maxIter=10, regParam=0.3, elasticNetParam=0.8)","user":"anonymous","dateUpdated":"2022-10-12T19:04:55+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665601460444_-407681789","id":"20221012-190420_1702451323","dateCreated":"2022-10-12T19:04:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1221","dateFinished":"2022-10-12T19:04:55+0000","dateStarted":"2022-10-12T19:04:55+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nlrModel = lr.fit(trainingData)","user":"anonymous","dateUpdated":"2022-10-12T19:05:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665601495406_-1562700564","id":"20221012-190455_1712167459","dateCreated":"2022-10-12T19:04:55+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1308","dateFinished":"2022-10-12T19:05:18+0000","dateStarted":"2022-10-12T19:05:18+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\u001b[0;31m\u001b[0m\n\u001b[0;31mIllegalArgumentException\u001b[0mTraceback (most recent call last)\n\u001b[0;32m<ipython-input-42-3d279c67d2b5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mlrModel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrainingData\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/ml/base.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, dataset, params)\u001b[0m\n\u001b[1;32m     62\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m             raise ValueError(\"Params must be either a param map or a list/tuple of param maps, \"\n\n\u001b[0;32m/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/ml/wrapper.py\u001b[0m in \u001b[0;36m_fit\u001b[0;34m(self, dataset)\u001b[0m\n\u001b[1;32m    263\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    264\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 265\u001b[0;31m         \u001b[0mjava_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fit_java\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    266\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_create_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mjava_model\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    267\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/ml/wrapper.py\u001b[0m in \u001b[0;36m_fit_java\u001b[0;34m(self, dataset)\u001b[0m\n\u001b[1;32m    260\u001b[0m         \"\"\"\n\u001b[1;32m    261\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_transfer_params_to_java\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 262\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_java_obj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    263\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    264\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/zeppelin/interpreter/spark/pyspark/py4j-0.10.4-src.zip/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1131\u001b[0m         \u001b[0manswer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1132\u001b[0m         return_value = get_return_value(\n\u001b[0;32m-> 1133\u001b[0;31m             answer, self.gateway_client, self.target_id, self.name)\n\u001b[0m\u001b[1;32m   1134\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1135\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mtemp_arg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtemp_args\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/sql/utils.py\u001b[0m in \u001b[0;36mdeco\u001b[0;34m(*a, **kw)\u001b[0m\n\u001b[1;32m     77\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mQueryExecutionException\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m': '\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstackTrace\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstartswith\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'java.lang.IllegalArgumentException: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 79\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mIllegalArgumentException\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m': '\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstackTrace\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     80\u001b[0m             \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     81\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mdeco\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;31mIllegalArgumentException\u001b[0m: u'Field \"features\" does not exist.'"}]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2022-10-12T19:05:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1665601518247_-1663911118","id":"20221012-190518_979179438","dateCreated":"2022-10-12T19:05:18+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1389"}],"name":"Untitled Note 1","id":"2HF7P18SK","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}